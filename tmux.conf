# --------------------
# Basic settings
# --------------------

# use UTF8
set -g utf8
set -g status-utf8 on
set-window-option -g utf8 on

# support 256 colors
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# shorten comand delay
set -sg escape-time 0

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# mouse mode on
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# acitivity monitoring
setw -g monitor-activity on
set -g visual-activity on


# --------------------
# Bindings
# --------------------

# set prefix to C-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# switch to copy mode with double C-Space
bind Space copy-mode
bind C-Space copy-mode

# create new windows/panes in same directory
# spliting with 's' and 'v'
bind c new-window -c '#{pane_current_path}'

bind s split-window -c '#{pane_current_path}'
bind C-s split-window -c '#{pane_current_path}'

bind v split-window -h -c '#{pane_current_path}'
bind C-v split-window -h -c '#{pane_current_path}'

# closing window/pane without confirmation
bind x kill-pane
bind C-x kill-pane
bind q kill-window
bind C-q kill-window

# clear panel
bind C-k send-keys "clear && tmux clear-history" \; send-keys "Enter"

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# go to panel number
bind g display-panes

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


# --------------------
# Copy & Paste
# --------------------

# use vim keybindings in copy mode
set -g mode-keys vi
set -g history-limit 10000

# use 'v' to start selection, 'V' to change selection to rectangle
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'V' rectangle-toggle

# copy with 'y' or 'Enter'
unbind -t vi-copy Enter
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
bind -t vi-copy Enter copy-pipe 'xclip -in -selection clipboard'

# paste with 'p' or 'C-p'
bind p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"


# --------------------
# The look
# --------------------

# Source tmuxline snapshot
# source-file .tmux/tmuxline_snapshot

set -g status on
set -g status-left " "
set -g status-right " "
set -g status-justify centre
set -gw window-status-format "#I:#10W#F"
set -gw mode-style fg=colour226,bold
set -g status-style fg=colour254
set -g message-style fg=colour254
set -g pane-active-border-style fg=colour233,bg=colour233
set -g pane-border-style fg=colour233,bg=colour233


# --------------------
# Local additions
# --------------------

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
